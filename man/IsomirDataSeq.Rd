% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/AllClasses.R
\docType{class}
\name{IsomirDataSeq}
\alias{IsomirDataSeq}
\alias{IsomirDataSeq-class}
\alias{IsomirDataSeqFromFiles}
\title{Class that contain all isomiRs annotation for all samples}
\usage{
IsomirDataSeq(se, expList, varList, sumList)

IsomirDataSeq(se, expList, varList, sumList)

IsomirDataSeqFromFiles(files, design, cov = 1, header = FALSE, skip = 1,
  ...)
}
\arguments{
\item{se}{SummarizedExperiment object}

\item{expList}{list of samples with miraligner output}

\item{varList}{list of samples with summarized isomiR
information for each type}

\item{sumList}{list of samples with general isomiR information}

\item{files}{files with the output of miraligner tool}

\item{design}{data frame containing groups for each sample}

\item{cov}{remove sequences that have relative abundance lower
than this number}

\item{header}{boolean to indicate files contain headers}

\item{skip}{skip first line when reading files}

\item{...}{arguments provided to \code{SummarizedExperiment} including rowData and exptData}
}
\value{
\code{\link[isomiRs]{IsomirDataSeq}} class
}
\description{
The \code{IsomirDataSeq} is a subclass of \code{SummarizedExperiment},
used to store the input values, intermediate calculations and results of an
isomiR analysis.  The \code{IsomirDataSeq} class stores all raw isomiRs
data for each sample, processed information,
summary for each isomiR type,
raw counts, normalized counts, and data.frame with
columns information for each sample.

The \code{IsomirDataSeqFromFiles}
}
\details{
\code{IsomirDataSeqFromFiles} creates this object from seqbuster output files.

Methods for this objects are \code{\link[isomiRs]{counts}} and \code{\link[isomiRs]{isoSelect}}, and functions
available for this object are \code{\link[isomiRs]{isoCounts}}, \code{\link[isomiRs]{isoNorm}}, \code{\link[isomiRs]{isoDE}} and
\code{\link[isomiRs]{isoPlot}}.
}
\examples{
\dontrun{
fn_list = c("url1", "url2")
de = data.frame(row.names=c("f1" , "f2"), condition = c("n1", "o1"))
ids <- IsomirDataSeqFromFiles(fn_list, design=de)

select(ids, "hsa-let-7a-5p")
counts(ids)[1:5, ]
}
}

